{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/orbit-counts/orbit-counts.component.ts","./src/app/orbit-counts/orbit-counts.component.html","./src/app/satellite.ts","./src/app/orbit-list/orbit-list.component.html","./src/app/orbit-list/orbit-list.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { Satellite } from './satellite';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'orbit-report';\n  sourceList: Satellite[];\n  displayList: Satellite[];\n\n  constructor() {\n    this.sourceList = [];\n    this.displayList = [];\n    let satellitesUrl = 'https://handlers.education.launchcode.org/static/satellites.json';\n \n    window.fetch(satellitesUrl).then(function(response) {\n       response.json().then(function(data) {\n \n          let fetchedSatellites = data.satellites;\n      \n\n          for (let i=0; i<fetchedSatellites.length; i++) {\n            let satellite = new Satellite(fetchedSatellites[i].name, fetchedSatellites[i].type, fetchedSatellites[i].launchDate, fetchedSatellites[i].orbitType, fetchedSatellites[i].operational)\n            this.sourceList.push(satellite)\n          };\n    \n          this.displayList = this.sourceList.slice(0);\n       }.bind(this));\n    }.bind(this));\n \n }\n\n search(searchTerm: string): void {\n  let matchingSatellites: Satellite[] = [];\n  searchTerm = searchTerm.toLowerCase();\n  for(let i=0; i < this.sourceList.length; i++) {\n     let name = this.sourceList[i].name.toLowerCase();\n     let type = this.sourceList[i].type.toLowerCase();\n     let orbitType = this.sourceList[i].orbitType.toLowerCase();\n     if (name.indexOf(searchTerm) >= 0) {\n        matchingSatellites.push(this.sourceList[i]);\n      } else if (type.indexOf(searchTerm) >= 0) {\n         matchingSatellites.push(this.sourceList[i]);\n      } else if (orbitType.indexOf(searchTerm) >= 0) {\n         matchingSatellites.push(this.sourceList[i])\n    }\n  }\n  // assign this.displayList to be the array of matching satellites\n  // this will cause Angular to re-make the table, but now only containing matches\n  this.displayList = matchingSatellites;\n}\n \n\n\n};\n\n","<app-orbit-list [satellites]=\"displayList\"></app-orbit-list>\n<div class=\"search-form\">\n  <input\n    #searchTerm\n    class=\"searchTerm\"\n    (keydown)=\"search(searchTerm.value)\"\n    placeholder=\"Sirius 1\"\n  />\n  <button (click)=\"search(searchTerm.value)\">Search</button>\n</div>\n<div>\n  <app-orbit-counts [satellites]=\"displayList\"></app-orbit-counts>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppComponent } from './app.component';\nimport { OrbitListComponent } from './orbit-list/orbit-list.component';\nimport { OrbitCountsComponent } from './orbit-counts/orbit-counts.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OrbitListComponent,\n    OrbitCountsComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Input } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { Satellite } from '../satellite';\n\n@Component({\n  selector: 'app-orbit-counts',\n  templateUrl: './orbit-counts.component.html',\n  styleUrls: ['./orbit-counts.component.css']\n})\nexport class OrbitCountsComponent implements OnInit {\n  @Input() satellites: Satellite[];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  countType(type) {\n    let total = 0;\n\n    for (let satellite of this.satellites) {\n      if (satellite.type === type) {\n        total++\n      }\n    }\n    return total;\n  }\n\n};\n","<div class=\"satellite-counts\">\n  <h3>Satellite Counts:</h3>\n  <div class=\"counts\">\n    <div>\n      Total: <span>{{ satellites.length }}</span>\n    </div>\n    <div>\n      Space Debris: <span>{{ countType(\"Space Debris\") }}</span>\n    </div>\n    <div>\n      Communication: <span>{{ countType(\"Communication\") }}</span>\n    </div>\n    <div>\n      Probe: <span>{{ countType(\"Probe\") }}</span>\n    </div>\n    <div>\n      Positioning: <span>{{ countType(\"Positioning\") }}</span>\n    </div>\n    <div>\n      Space Station: <span>{{ countType(\"Space Station\") }}</span>\n    </div>\n    <div>\n      Telescope: <span>{{ countType(\"Telescope\") }}</span>\n    </div>\n  </div>\n</div>\n","export class Satellite {\n    name: string;\n    orbitType: string;\n    type: string;\n    operational: boolean;\n    launchDate: string;\n\n    constructor(name: string, type: string, launchDate: string, orbitType: string, operational: boolean) {\n        this.name = name;\n        this.type = type;\n        this.launchDate = launchDate;\n        this.orbitType = orbitType;\n        this.operational = operational;\n    };\n\n    checkDebris() {\n        if (this.type === \"Space Debris\")\n        return true;\n      };\n};","<div class=\"orbit-report\">\n  <h3>Orbit Report</h3>\n  <table>\n    <tr class=\"header-row\">\n      <th (click)=\"sort('name')\" class=\"sortable header\">Name</th>\n      <th (click)=\"sort('type')\" class=\"sortable header\">Type</th>\n      <th class=\"header\">Operational</th>\n      <th class=\"header\">Orbit Type</th>\n      <th class=\"header\">Launch Date</th>\n    </tr>\n    <tr *ngFor=\"let satellite of satellites\">\n      <th>{{ satellite.name }}</th>\n      <th\n        [class.warning]=\"satellite.checkDebris()\"\n        (click)=\"sort(satellite.type)\"\n      >\n        {{ satellite.type }}\n      </th>\n      <th>{{ satellite.operational }}</th>\n      <th>{{ satellite.orbitType }}</th>\n      <th>{{ satellite.launchDate }}</th>\n    </tr>\n  </table>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Satellite } from '../satellite';\n\n@Component({\n  selector: 'app-orbit-list',\n  templateUrl: './orbit-list.component.html',\n  styleUrls: ['./orbit-list.component.css']\n})\n\nexport class OrbitListComponent implements OnInit {\n  @Input() satellites: Satellite[];\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  sort(column: string): void {\n    // array.sort modifies the array, sorting the items based on the given compare function\n    this.satellites.sort(function(a: Satellite, b: Satellite): number {\n       if(a[column] < b[column]) {\n          return -1;\n       } else if (a[column] > b[column]) {\n          return 1;\n       }\n       return 0;\n    });\n }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}